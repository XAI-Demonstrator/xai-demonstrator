name: Test Deployment

on:
  workflow_run:
    workflows:
      - "Landing Page"
      - "Review Sentiment"
      - "Visual Inspection"
    branches:
      - master
    types:
      - completed
  push:
    branches:
      - master
    paths:
      - 'deployment/test-deployment/**'
      - '!deployment/test-deployment/**.md'

jobs:
  deploy:
     runs-on: ubuntu-latest
     if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
     steps:
       - uses: actions/checkout@master
       - name: Wait for lock to release and place lock
         uses: appleboy/ssh-action@v0.1.4
         with:
           host: ${{ secrets.TEST_HOST }}
           username: ${{ secrets.TEST_USER }}
           key: ${{ secrets.TEST_KEY }}
           script: |
             set -e
             # wait for lock
             while [ -f .test-deployment-lock ]; do sleep 1 && echo "awaiting lock" ; done
             # claim lock
             echo $GITHUB_RUN_ID >> ~/.test-deployment-lock
             # detect almost-parallel runs of this workflow
             if [[ `cat ~/.test-deployment-lock | wc -l` > 1 ]]; then exit 1; fi
             # shut down current deployment
             cd test-deployment/deployment/test-deployment/ || exit 0
             sudo docker-compose down
       - name: Copy docker-compose.yml to test server
         uses: appleboy/scp-action@v0.1.1
         with:
           host: ${{ secrets.TEST_HOST }}
           username: ${{ secrets.TEST_USER }}
           key: ${{ secrets.TEST_KEY }}
           source: "deployment/test-deployment/docker-compose.yml"
           target: "test-deployment"
           rm: true
       - name: SSH Remote Commands
         uses: appleboy/ssh-action@v0.1.4
         with:
           host: ${{ secrets.TEST_HOST }}
           username: ${{ secrets.TEST_USER }}
           key: ${{ secrets.TEST_KEY }}
           script: |
             set -e
             cd test-deployment/deployment/test-deployment/
             sudo docker-compose pull
             sudo docker-compose up -d
             sleep 10 && rm ~/.test-deployment-lock
       - name: Slack Notification
         uses: rtCamp/action-slack-notify@v2.2.0
         env:
            SLACK_CHANNEL: xai-demonstrator-monitor
            SLACK_MESSAGE: 'Successfully deployed a new version to https://test.xaidemo.de :rocket:'
            SLACK_TITLE: New Test Deployment
            SLACK_USERNAME: Deployment Monitor
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            MSG_MINIMAL: true
