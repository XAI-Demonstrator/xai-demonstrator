name: Experiment Deployment

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "Guess the Country"
    branches:
      - master
    types:
      - completed
  push:
    branches:
      - master
    paths:
      - "deployment/experiment-deployment/**"
      - "!deployment/experiment-deployment/**.md"

jobs:
  build-frontends:
    strategy:
      matrix:
        include:
          - service: country
            repo_path: ./guess-the-country/country-frontend

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - uses: actions/cache@v3.3.1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('${{ matrix.repo_path }}/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Frontend
        run: |
          set -e
          cd ${{ matrix.repo_path }}
          npm install
          npm run build -- --mode experiment-deployment
          mv dist ${{ matrix.service }}

      - name: Save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}
          path: ${{ matrix.repo_path }}/${{ matrix.service }}
          retention-days: 1

  deploy:
    needs: build-frontends
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment:
      name: experiment
      url: https://gtc.xaidemo.de/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all frontends
        uses: actions/download-artifact@v3
        with:
          path: "deployment/experiment-deployment/nginx-frontend/"

      - name: Wait for lock to release and place lock
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            # wait for lock
            while [ -f .experiment-deployment-lock ]; do sleep 1 && echo "awaiting lock" ; done
            # claim lock
            echo $GITHUB_RUN_ID >> ~/.experiment-deployment-lock
            # detect almost-parallel runs of this workflow
            if [[ `cat ~/.experiment-deployment-lock | wc -l` > 1 ]]; then exit 1; fi
            # shut down current deployment
            cd experiment-deployment/deployment/experiment-deployment/ || exit 0
            sudo docker-compose down

      - name: Copy experiment-deployment to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deployment/experiment-deployment/**"
          target: "experiment-deployment"
          rm: true

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.10
        env:
          COUCHDB_USER: ${{ secrets.COUCHDB_USER }}
          COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
          STREETVIEW_API_KEY: ${{ secrets.STREETVIEW_API_KEY }}
          BATCH_SIZE: ${{ secrets.BATCH_SIZE }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: COUCHDB_USER,COUCHDB_PASSWORD,STREETVIEW_API_KEY,BATCH_SIZE
          script: |
            set -e
            export STREETVIEW_API_KEY=${STREETVIEW_API_KEY}
            export BATCH_SIZE=${BATCH_SIZE}
            export COUCHDB_USER=${COUCHDB_USER}
            export COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
            cd ~/gtc-study-backend
            git pull
            cp -r ~/gtc-study-backend ~/experiment-deployment/deployment/experiment-deployment/
            cd ~/experiment-deployment/deployment/experiment-deployment/
            sudo -E docker-compose pull
            sudo -E docker-compose up --build --scale country=5 --scale proxy=3 -d
            sleep 10 && rm ~/.experiment-deployment-lock

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: xai-demonstrator-monitor
          SLACK_MESSAGE: "Successfully deployed a new version to https://gtc.xaidemo.de/ :rocket:"
          SLACK_TITLE: New Experiment Deployment
          SLACK_USERNAME: Deployment Monitor
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true
